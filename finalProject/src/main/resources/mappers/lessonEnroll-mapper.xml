<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lessonEnrollMapper">

<resultMap type="lessonEnroll" id="lessonEnrollResultSet">
	<result column="LE_NO" property="leNo"/>
	<result column="USER_NO" property="userNo"/>
	<result column="SUBJECT" property="subject"/>
	<result column="FEE" property="fee"/>
	<result column="LE_STYLE" property="leStyle"/>
	<result column="AREA" property="area"/>
	<result column="T_YEAR" property="tyear"/>
	<result column="CAREER" property="career"/>
	<result column="LE_DAY" property="leDay"/>
	<result column="TEACHINGSTYLE" property="teachingStyle"/>
	<result column="LE_ORIGINNAME" property="leOriginname"/>
	<result column="LE_CHANGENAME" property="leChangename"/>
	<result column="STATUS" property="status"/>
	
	<result column="USER_NAME" property="userName"/>
	<result column="GENDER" property="gender"/>
	<result column="RATING" property="rating"/>
	
</resultMap>

 <resultMap type="districts" id="districtsResultSet">
 	<result column="D_NO" property="dno"/>
 	<result column="AREA" property="area"/>
 </resultMap>



<select id="selectDistrictsList" resultMap="districtsResultSet">
	SELECT D_NO,AREA
	FROM DISTRICTS
</select>



<select id="selectList" resultMap="lessonEnrollResultSet">
	SELECT 
SUBJECT, FEE, CAREER, STATUS,T_YEAR,LE_NO
FROM LESSON_ENROLL
WHERE USER_NO = #{userNo}
AND STATUS = 'Y'
</select>


<select id="lessonInsertCheck" resultType="_int">
SELECT COUNT(*)
FROM LESSON_ENROLL
WHERE USER_NO = #{userNo}
AND SUBJECT = #{subject}
AND STATUS ='Y'
</select>

<insert id="lessonInsert"  parameterType="lessonEnroll">
	INSERT INTO LESSON_ENROLL(LE_NO,
                          USER_NO,
                          SUBJECT,
                          FEE,
                          T_YEAR,
                          LE_STYLE,
                          AREA,
                          CAREER,
                          LE_DAY,
                          TEACHINGSTYLE,
                          LE_ORIGINNAME,
                          LE_CHANGENAME,
                          STATUS
                          )
                    VALUES(SEQ_LENO.NEXTVAL,
                        #{userNo},
                        #{subject},
                        #{fee},
                  		#{tyear},
                        #{leStyle},
                        #{area},
                        #{career},
                       	#{leDay},
                        #{teachingStyle},
                        #{leOriginname},
                        #{leChangename},
                        'Y'
                    )
</insert>

<select id="selectLesson" resultMap="lessonEnrollResultSet"  parameterType="int">
SELECT LE_NO,L.USER_NO,M.USER_NAME,SUBJECT,FEE,LE_STYLE,T_YEAR,AREA,CAREER,LE_DAY,TEACHINGSTYLE,LE_ORIGINNAME,LE_CHANGENAME
FROM LESSON_ENROLL L
JOIN MEMBER M  ON (L.USER_NO = M.USER_NO)
WHERE L.STATUS = 'Y'
AND M.STATUS = 'Y'
AND LE_NO =#{leNo}

</select>

<select id="selectAllLesson" resultMap="lessonEnrollResultSet">
SELECT USER_NAME,GENDER,RATING,SUBJECT,T_YEAR,LE_NO
FROM LESSON_ENROLL L
JOIN MEMBER M  ON (L.USER_NO = M.USER_NO)
JOIN TEACHER T ON (M.USER_NO = T.USER_NO)
WHERE M.STATUS = 'Y'
AND L.STATUS = 'Y'
ORDER BY T.RATING
</select>

<select id="selectAllLessonCount" resultType="_int">
SELECT COUNT(*)
FROM LESSON_ENROLL L
JOIN MEMBER M  ON (L.USER_NO = M.USER_NO)
JOIN TEACHER T ON (M.USER_NO = T.USER_NO)
WHERE M.STATUS = 'Y'
AND L.STATUS = 'Y'
ORDER BY T.RATING
</select>


<update id="deleteLesson" parameterType="lessonEnroll">
UPDATE LESSON_ENROLL
SET STATUS = 'N'
WHERE LE_NO =#{leNo}

</update>

<update id="updateLesson" parameterType="lessonEnroll">
UPDATE LESSON_ENROLL
SET SUBJECT = #{subject},
	FEE = #{fee},
	LE_STYLE = #{leStyle},
	T_YEAR = #{tyear},
	AREA = #{area},
	CAREER = #{career},
	LE_DAY = #{leDay},
	TEACHINGSTYLE =#{teachingStyle},
	LE_ORIGINNAME =#{leOriginname},
	LE_CHANGENAME = #{leChangename}
WHERE LE_NO =#{leNo}
</update>
 
 
 
 <resultMap type="lessonReview" id="lessonReviewResultSet">
 	<result column="RENO" property="reNo"/>
 	<result column="REF_LENO" property="refLeno"/>
 	<result column="RE_UNO" property="reUno"/>
 	<result column="RE_UNAME" property="reUname"/>
 	<result column="RE_TEXT" property="reText"/>
 	<result column="CREATE_DATE" property="createDate"/>
 	<result column="STATUS" property="status"/>
<!-- 	<result column="STUDENT_NO" property="studentNo"/> -->
<!-- 	<result column="TEACHER_NO" property="teacherNo"/> -->
 </resultMap>

<!-- <resultMap type="lesson" id="lessonResultSet"> -->
<!-- 	<result column="L_NO" property="lNo"/> -->
<!-- </resultMap> -->

<insert id="insertReview" parameterType="lessonReview">
	INSERT INTO LESSON_REVIEW(RENO, 
							  REF_LENO, 
							  RE_UNO, 
							  RE_UNAME, 
							  RE_TEXT, 
							  CREATE_DATE, 
							  STATUS
							  )
	                   VALUES(SEQ_RENO.NEXTVAL, 
	                          #{refLeno}, 
	                          #{reUno}, 
	                          #{reUname}, 
	                          #{reText}, 
	                          SYSDATE, 
	                          'Y'
	                          )
</insert>

<select id="reviewList" resultMap="lessonReviewResultSet">
	SELECT REF_LENO, RE_UNO, RE_UNAME, RE_TEXT, CREATE_DATE
	FROM LESSON_REVIEW LR
	JOIN LESSON ON (RE_UNO = STUDENT_NO)
	WHERE TEACHER_NO = #{refLeNo}
	AND LR.STATUS = 'Y'
	ORDER BY CREATE_DATE DESC
</select>



<select id="selectSearchAllLesson" resultMap="lessonEnrollResultSet">
SELECT USER_NAME,GENDER,RATING,SUBJECT,T_YEAR,LE_NO
FROM LESSON_ENROLL L
JOIN MEMBER M  ON (L.USER_NO = M.USER_NO)
JOIN TEACHER T ON (M.USER_NO = T.USER_NO)
WHERE M.STATUS = 'Y'
AND L.STATUS = 'Y'
AND ${searchCat} LIKE '%'||#{searchText}||'%'
ORDER BY T.RATING
</select>
</mapper>